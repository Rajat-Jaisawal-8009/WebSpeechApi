import { useRef, useState } from "react";
import "./App.css";

function App() {
  const [text, setText] = useState("");
  const recognitionRef = useRef(null);
  const silenceTimerRef = useRef(null);

  const startSTTHandle = () => {
    const SpeechRecognition =
      window.SpeechRecognition || window.webkitSpeechRecognition;

    if (!SpeechRecognition) {
      alert("Your browser does not support SpeechRecognition!");
      return;
    }

    // рд╣рд░ рдмрд╛рд░ рдирдпрд╛ instance рди рдмрдиреЗ, рдЗрд╕рд▓рд┐рдП useRef рдореЗрдВ рд░рдЦреЛ
    if (!recognitionRef.current) {
      const recognition = new SpeechRecognition();
      recognition.continuous = true;
      recognition.interimResults = true;
      recognition.lang = "en-US";

      // рдЬрдм result рдЖрдП
      recognition.onresult = (event) => {
        const result = event.results[event.resultIndex]; // рд╕рд┐рд░реНрдл latest result рд▓реЛ

        if (result.isFinal) {
          setText((prev) => prev + " " + result[0].transcript);
        }

        // рд╣рд░ рдмрд╛рд░ рдмреЛрд▓рдиреЗ рдкрд░ timer reset рдХрд░реЛ
        clearTimeout(silenceTimerRef.current);
        silenceTimerRef.current = setTimeout(() => {
          console.log("тП│ Silence detect: User рдиреЗ рдмреЛрд▓рдирд╛ рдмрдВрдж рдХрд░ рджрд┐рдпрд╛");
          recognition.stop();
        }, 4000);
      };

      recognition.onspeechstart = () => {
        console.log("ЁЯОд User рдмреЛрд▓ рд░рд╣рд╛ рд╣реИ...");
        clearTimeout(silenceTimerRef.current);
      };

      recognition.onspeechend = () => {
        console.log("ЁЯЫС Speech end detect рд╣реБрдЖ");
      };

      recognition.onend = () => {
        console.log("Recognition рдмрдВрдж рд╣реЛ рдЧрдпрд╛");
      };

      recognition.onerror = (e) => {
        console.error("тЭМ Error:", e.error);
      };

      recognitionRef.current = recognition;
    }

    recognitionRef.current.start();
    console.log("Mic рдЪрд╛рд▓реВ рд╣реЛ рдЧрдпрд╛...");
  };

  return (
    <>
      <button onClick={startSTTHandle}>ЁЯОд Start Mic</button>
      <div style={{ marginTop: "20px" }}>{text}</div>
    </>
  );
}

export default App;
